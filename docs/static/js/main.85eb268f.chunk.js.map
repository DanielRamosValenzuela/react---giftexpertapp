{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"iMAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAuB5C,OACI,sBAAMC,SAhBW,SAACC,GAClBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAc,SAAAS,GAAI,OAAIP,GAAJ,mBAAmBO,OACrCN,EAAc,MAWlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAxBc,SAAEP,GACxBF,EAAeE,EAAEQ,OAAOF,a,+BCRnBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAETC,EAFS,iDAEuCC,UAAUH,GAFjD,+DAGII,MAAQF,GAHZ,cAGTG,EAHS,gBAIMA,EAAKC,OAJX,uBAIRC,EAJQ,EAIRA,KAEDC,EAAOD,EAAKE,KAAM,SAAAC,GAAQ,IAAD,EAC3B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAV3B,kBAeTM,GAfS,4CAAH,sDCCPO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAGhC,OACI,sBAAKc,UAAU,2CAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,kCAAKA,EAAL,WCHCO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECFb,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAgBxC,OATAC,qBAAY,WAEJxB,EAASC,GAAUwB,MAAM,SAAAC,GAAUH,EAAS,CACxCf,KAAMkB,EACNL,SAAU,SAGnB,CAACpB,IAEGqB,EDZmBK,CAAc1B,GAAhCO,EAF6B,EAE7BA,KAAMa,EAFuB,EAEvBA,QAEd,OAEI,qCACI,qBAAIJ,UAAU,+CAAd,cAA+DhB,EAA/D,OAEEoB,GAAW,mBAAGJ,UAAU,mCAAb,qBAGb,qBAAKA,UAAU,YAAf,SAGQT,EAAKE,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAGOA,GADAA,EAAIC,aEnBpBgB,EAAe,WAAM,MAGMzC,mBAAS,CAAC,cAHhB,mBAGvB0C,EAHuB,KAGX3C,EAHW,KAS9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEQ2C,EAAWnB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAWA,GADLA,Y,MClBlC6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.85eb268f.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = ( e ) => {\r\n        setInputValue( e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if ( inputValue.trim().length > 2) {\r\n            setCategories(cats =>[inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n\r\n        \r\n        \r\n    }\r\n    \r\n\r\n\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }            \r\n            />\r\n            \r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\nexport const getGifs = async ( category ) => {\r\n\r\n        const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=lHLSFIqzWGT840N10EA9PKW00gyxhP9s`\r\n        const resp = await fetch ( url );\r\n        const {data} = await resp.json();\r\n\r\n        const gifs = data.map ( img => {\r\n            return {\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium.url\r\n            }\r\n\r\n        })\r\n\r\n       return gifs;\r\n      \r\n\r\n    }","import React from 'react'\r\n\r\nexport const GifGridItem = ({title, url}) => {\r\n\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__bounceIn\">\r\n            <img src={url} alt={title} />\r\n            <p> {title} </p>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n// import { getGifs } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data, loading } = useFetchGifs( category );\r\n\r\n    return (\r\n\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeInBottomRight\"> {category} </h3>\r\n\r\n            { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\r\n\r\n\r\n            <div className=\"card-grid\">\r\n        \r\n                 {\r\n                    data.map( img => (\r\n                      <GifGridItem\r\n\r\n                        key={img.id}\r\n                        {... img } \r\n                        />\r\n                  ))\r\n                }\r\n            \r\n             </div>\r\n        </>    \r\n    )\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect ( () => {\r\n\r\n            getGifs( category).then( imgs => { setState({\r\n                data: imgs,\r\n                loading : false\r\n            }); \r\n    })\r\n    }, [category])\r\n\r\n    return state;\r\n\r\n\r\n\r\n\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    // const categories= ['One punch', 'Samurai X', 'Dragon ball'];\r\n    const [categories, setCategories] = useState(['One punch']);\r\n\r\n    // const handleAdd = () => {\r\n    //     setcategories(categories => [...categories, 'HunterXHunter']);\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories } />\r\n            <hr />\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( category => (\r\n                        <GifGrid \r\n                            key={ category }\r\n                            category={ category }\r\n                        />    \r\n                    ))\r\n                }\r\n                \r\n            </ol>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}